{"version":3,"sources":["logo.svg","store.js","MenuItem.js","component.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","userCity","userCountry","Provinces","Opening","displayBlock","comment","hot","cold","coldish","selectedProvince","images","backgroundDay","backgroundNight","windComment","calm","lightBreeze","freshBreeze","strongBreeze","gale","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","arguments","length","undefined","action","type","city","getcity","Object","objectSpread","country","getcountry","locationObject","currentTimeImage","result","d","Date","getMinutes","getSeconds","tempComment","messageWind","randoNum","Math","floor","random","timeOfDay","getHours","main","temp","windSpeed","wind","speed","getIcon","weather","icon","name","description","humidity","imageOfWeather","theWindComment","results","a","newObject","select","applyMiddleware","thunk","MenuItem","_ref","province","gettingProvince","react_default","createElement","onClick","className","Component","connect","opening","Dispatch","getSelectedProvince","args","dispatch","getState","weatherAPI","axios","get","then","res","data","getProvince","getLocation","lat","lon","getSearch","target","value","Search","getCountry","searchCountry","props","Style","onChange","placeholder","map","index","MenuItem_MenuItem","id","src","ReactDOM","render","react_redux_es","react_favicon_default","url","document","getElementById"],"mappings":"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","file":"static/js/main.1b21bcdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.d41d8cd9.svg\";","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\";\n\nconst initialState = {\n  userCity: \"\",\n  userCountry: \"\",\n\n  Provinces: [\n    \"Cape Town\",\n    \"Mossel Bay\",\n    \"Johannesburg\",\n    \"Pretoria\",\n    \"Bloemfontein\"\n  ],\n  Opening: \"Please Select A City\",\n  displayBlock: \"none\",\n  comment: {\n    hot: \"Put on that summer shirt bro\",\n    cold: \"ayy it's bit icy bro a jersey looking good right now\",\n    coldish: \"bro just take a light jersey with you,'ayt boom'\"\n  },\n\n  selectedProvince: \"Please Select A City\",\n  images: {\n    backgroundDay: [\n      \"background-image:url('https://images.pexels.com/photos/269255/pexels-photo-269255.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/248990/pexels-photo-248990.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/807598/pexels-photo-807598.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/793012/pexels-photo-793012.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/572487/pexels-photo-572487.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/175268/pexels-photo-175268.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\"\n    ],\n    backgroundNight: [\n      \"background-image:url('https://images.pexels.com/photos/374948/pexels-photo-374948.jpeg?auto=compress&cs=tinysrgb&h=350')\",\n      \"background-image:url('https://images.pexels.com/photos/1252869/pexels-photo-1252869.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/1477539/pexels-photo-1477539.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/1480393/pexels-photo-1480393.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940])\",\n      \"background-image:url('https://images.pexels.com/photos/262738/pexels-photo-262738.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\",\n      \"background-image:url('https://images.pexels.com/photos/34107/milky-way-stars-night-sky.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940')\"\n    ]\n  },\n  windComment: {\n    calm: \"Ayy it's chilled,no need to tie your hair up \",\n    lightBreeze: \"We still good bro it's a light breeze out there\",\n    freshBreeze:\n      \"Okay bro it's bit windy take a light jersey in case the sun decides to dip and tie your hair up \",\n    strongBreeze: \"The wind will push you into the street \",\n    gale: \"Bro Bro don't go outside\"\n  }\n};\n\nexport const getProvince = args => {\n  return (dispatch, getState) => {\n    let weatherAPI =\n      \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      args +\n      \",South Africa&units=metric&appid=2e9631ab28e2b456e8a3724087cc728a\";\n\n    axios.get(weatherAPI).then(res => {\n      return dispatch({\n        type: \"PROVINCE\",\n        select: args,\n        results: res.data\n      });\n    });\n  };\n};\nexport const Search = city => {\n  let City = city.target.value;\n\n  return {\n    type: \"SEARCH_CITY\",\n    getcity: City\n  };\n};\nexport const searchCountry = country => {\n  let Country = country.target.value;\n\n  return {\n    type: \"SEARCH_COUNTRY\",\n    getcountry: Country\n  };\n};\nexport const GetMYLocation = (lat, lon) => {\n  return (dispatch, getState) => {\n    let userCity = getState().userCity;\n    let userCountry = getState().userCountry;\n\n    let weatherAPI =\n      \"http://api.openweathermap.org/data/2.5/weather?q=\" +\n      userCity +\n      \",\" +\n      userCountry +\n      \"a&units=metric&appid=2e9631ab28e2b456e8a3724087cc728a\";\n\n    axios.get(weatherAPI).then(res => {\n      return dispatch({\n        type: \"MY_LOCATION\",\n        result: res.data\n      });\n    });\n  };\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SEARCH_CITY\":\n      let city = action.getcity;\n      return {\n        ...state,\n        userCity: city\n      };\n    case \"SEARCH_COUNTRY\":\n      let country = action.getcountry;\n      return {\n        ...state,\n        userCountry: country\n      };\n\n    case \"MY_LOCATION\":\n      let result = action.result;\n      let locationObject;\n\n      //\n      let d = new Date(); // for now\n      let currentTimeImage;\n\n      d.getMinutes(); // =>  30\n      d.getSeconds(); // => 51\n      let randoNum = Math.floor(Math.random() * 6);\n\n      let timeOfDay = d.getHours();\n      if (timeOfDay > 0 && timeOfDay < 6) {\n        currentTimeImage = state.images.backgroundNight[randoNum];\n      }\n      if (timeOfDay >= 6 && timeOfDay < 18) {\n        currentTimeImage = state.images.backgroundDay[randoNum];\n      }\n\n      if (timeOfDay >= 18 && timeOfDay < 23.59) {\n        currentTimeImage = state.images.backgroundNight[randoNum];\n      }\n      //\n      let tempComment;\n      if (result.main.temp > 17) {\n        tempComment = state.comment[\"hot\"];\n      }\n      if (result.main.temp <= 17) {\n        tempComment = state.comment[\"coldish\"];\n      }\n      if (result.main.temp < 15) {\n        tempComment = state.comment[\"cold\"];\n      }\n      //\n      let messageWind;\n      let windSpeed = result.wind.speed;\n\n      if (windSpeed >= 0.5 && windSpeed < 3.3) {\n        messageWind = state.windComment.calm;\n      }\n      if (windSpeed >= 3.3 && windSpeed < 7.9) {\n        messageWind = state.windComment.lightBreeze;\n      }\n      if (windSpeed >= 7.9 && windSpeed < 13.8) {\n        messageWind = state.windComment.freshBreeze;\n      }\n      if (windSpeed >= 13.8 && windSpeed < 20.7) {\n        messageWind = state.windComment.strongBreeze;\n      }\n      if (windSpeed >= 20.7 && windSpeed <= 24.4) {\n        messageWind = state.windComment.gale;\n      }\n      //\n      let a = result.weather[0].icon;\n      let getIcon = \"http://openweathermap.org/img/w/\" + a + \".png\";\n\n      locationObject = {\n        name: result.name,\n        temp: result.main.temp,\n        weather: result.weather[0].description,\n        main: result.weather[0].main,\n        windSpeed: result.wind.speed,\n        humidity: result.main.humidity,\n        imageOfWeather: currentTimeImage,\n        comment: tempComment,\n        theWindComment: messageWind,\n        icon: getIcon\n      };\n\n      return {\n        ...state,\n        selectedProvince: locationObject,\n        Opening: \"\",\n        displayBlock: \"block\"\n      };\n    case \"PROVINCE\": {\n      let results = action.results;\n      let tempComment;\n      let a = results.weather[0].icon;\n      let messageWind;\n      //comment\n      if (results.main.temp > 17) {\n        tempComment = state.comment[\"hot\"];\n      }\n      if (results.main.temp <= 17) {\n        tempComment = state.comment[\"coldish\"];\n      }\n      if (results.main.temp < 15) {\n        tempComment = state.comment[\"cold\"];\n      }\n      //time of day\n      let d = new Date(); // for now\n      let currentTimeImage;\n\n      d.getMinutes(); // =>  30\n      d.getSeconds(); // => 51\n      let randoNum = Math.floor(Math.random() * 6);\n\n      let timeOfDay = d.getHours();\n      if (timeOfDay > 0 && timeOfDay < 6) {\n        currentTimeImage = state.images.backgroundNight[randoNum];\n      }\n      if (timeOfDay >= 6 && timeOfDay < 18) {\n        currentTimeImage = state.images.backgroundDay[randoNum];\n      }\n\n      if (timeOfDay >= 18 && timeOfDay < 23) {\n        currentTimeImage = state.images.backgroundNight[randoNum];\n      }\n      //wind speed\n      let windSpeed = results.wind.speed;\n\n      if (windSpeed >= 0.5 && windSpeed < 3.3) {\n        messageWind = state.windComment.calm;\n      }\n      if (windSpeed >= 3.3 && windSpeed < 7.9) {\n        messageWind = state.windComment.lightBreeze;\n      }\n      if (windSpeed >= 7.9 && windSpeed < 13.8) {\n        messageWind = state.windComment.freshBreeze;\n      }\n      if (windSpeed >= 13.8 && windSpeed < 20.7) {\n        messageWind = state.windComment.strongBreeze;\n      }\n      if (windSpeed >= 20.7 && windSpeed <= 24.4) {\n        messageWind = state.windComment.gale;\n      }\n\n      //\n      let getIcon = \"http://openweathermap.org/img/w/\" + a + \".png\";\n      let newObject = {\n        name: action.select,\n        temp: results.main.temp,\n        weather: results.weather[0].description,\n        main: results.weather[0].main,\n        windSpeed: results.wind.speed,\n        humidity: results.main.humidity,\n        imageOfWeather: currentTimeImage,\n        comment: tempComment,\n        theWindComment: messageWind,\n        icon: getIcon\n      };\n\n      return {\n        //\n\n        ...state,\n        selectedProvince: newObject,\n        Opening: \"\",\n        displayBlock: \"block\"\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  reducer,\n  /* preloadedState, */ composeEnhancers(applyMiddleware(thunk))\n);\n","import React from \"react\";\n\nexport const MenuItem = ({ province, gettingProvince }) => (\n  <div onClick={() => gettingProvince(province)} className=\"Provinces\">\n    {province}\n  </div>\n);\n","import { connect } from \"react-redux\";\nimport { App } from \"./App\";\nimport { getProvince, GetMYLocation, Search, searchCountry } from \"./store\";\nconst mapStateToProps = state => ({\n  Provinces: state.Provinces,\n  selectedProvince: state.selectedProvince,\n  opening: state.Opening,\n  displayBlock: state.displayBlock\n});\nconst mapDispatchToProps = Dispatch => {\n  const getCountry = country => Dispatch(searchCountry(country));\n  const getSearch = city => Dispatch(Search(city));\n  const getSelectedProvince = args => Dispatch(getProvince(args));\n  const getLocation = (lat, lon) => Dispatch(GetMYLocation(lat, lon));\n  return {\n    getSelectedProvince: getSelectedProvince,\n    getLocation: getLocation,\n    getSearch: getSearch,\n    getCountry: getCountry\n  };\n};\n\nexport const Component = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { MenuItem } from \"./MenuItem\";\n\nexport const App = props => {\n  const theSearchCity = city => {\n    props.getSearch(city);\n  };\n  const theSearchCountry = country => props.getCountry(country);\n  const gettingProvince = args => {\n    props.getSelectedProvince(args);\n  };\n  const getTheLocation = () => {\n    props.getLocation();\n  };\n\n  return (\n    <div Style={props.selectedProvince.imageOfWeather} className=\"MainContent\">\n      {\" \"}\n      <div className=\"Search\">\n        <p> If your City is not listed, be a lamb and search it</p>\n        <button onClick={getTheLocation}>Search</button>\n        City:\n        <input onChange={theSearchCity} className=\"Input\" placeholder=\"City\" />\n        Country:\n        <input\n          onChange={theSearchCountry}\n          className=\"Input\"\n          placeholder=\"Country\"\n        />\n      </div>\n      <div className=\"MainContent2\">\n        <nav>\n          {props.Provinces.map((province, index) => {\n            return (\n              <MenuItem province={province} gettingProvince={gettingProvince} />\n            );\n          })}\n        </nav>\n        <div className=\"DisplayWeather\">\n          <div className=\"WeatherContent\">\n            <h1>\n              Weather forecast{\" \"}\n              <img id=\"Icon\" src={props.selectedProvince.icon} />\n            </h1>\n            <hr />\n            <h3>{props.selectedProvince.name}</h3>\n            {props.opening}\n\n            <table Style={\"display:\" + props.displayBlock}>\n              <tbody>\n                <tr>\n                  <td>Weather for today:</td>\n                  <td>{props.selectedProvince.weather}</td>\n                </tr>\n\n                <tr>\n                  <td>temperature:</td>\n                  <td>\n                    {props.selectedProvince.temp}\n                    &#8451;\n                  </td>\n                </tr>\n                <tr>\n                  <td>wind speeds:</td>\n                  <td>\n                    {props.selectedProvince.windSpeed}\n                    m/s\n                    <br />\n                    {props.selectedProvince.theWindComment}\n                  </td>\n                </tr>\n\n                <tr>\n                  <td>message:</td>\n                  <td> {props.selectedProvince.comment}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\nimport { Component } from \"./component\";\n\nimport Favicon from \"react-favicon\";\n\nimport { getWeatherForArea } from \"./store\";\nReactDOM.render(\n  <Provider store={store}>\n    <Component>\n      <Favicon url=\"https://images.pexels.com/photos/1262302/pexels-photo-1262302.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\" />\n    </Component>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}